
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>D3: Adding values and elements to a chart</title>
		<script type="text/javascript" src="../d3.js"></script>
		<style type="text/css">
			/* No style rules here yet */
		</style>
	</head>
	<body>
	
		<p>Click on this text to add a new data value to the chart!</p>
			
		<script type="text/javascript">
            //ASSIGNMENT:
            //this code currently adds only the bar on click, but not the number labels
            // change the code so that labels are also added each time a bar is added
            //look for TODO: label toward end of code
            
			//Width and height
			var w = 600;
			var h = 250;
			
			var dataset = [ 5, 10, 13, 19, 21, 25, 22, 18, 15, 13,
							11, 12, 15, 20, 18, 17, 16, 18, 23, 25 ];
			
			var xScale = d3.scaleBand()
							.domain(d3.range(dataset.length))
							.rangeRound([0, w])
							.paddingInner(0.05);
			var yScale = d3.scaleLinear()
							.domain([0, d3.max(dataset)])
							.range([0, h]);
			
			//Create SVG element
			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);
			//Create bars
			svg.selectAll("rect")
			   .data(dataset)
			   .enter()
			   .append("rect")
			   .attr("x", function(d, i) {
			   		return xScale(i);
			   })
			   .attr("y", function(d) {
			   		return h - yScale(d);
			   })
			   .attr("width", xScale.bandwidth())
			   .attr("height", function(d) {
			   		return yScale(d);
			   })
			   .attr("fill", function(d) {
					return "rgb(0, 0, " + Math.round(d * 10) + ")";
			   });
			//Create labels
			svg.selectAll("text")
			   .data(dataset)
			   .enter()
			   .append("text")
			   .text(function(d) {
			   		return d;
			   })
			   .attr("text-anchor", "middle")
			   .attr("x", function(d, i) {
			   		return xScale(i) + xScale.bandwidth() / 2;
			   })
			   .attr("y", function(d) {
			   		return h - yScale(d) + 14;
			   })
			   .attr("font-family", "sans-serif")
			   .attr("font-size", "11px")
			   .attr("fill", "white");
			//On click, update with new data			
			d3.select("p")
				.on("click", function() {
					//Add one new value to dataset
					var maxValue = 25;
					var newNumber = Math.floor(Math.random() * maxValue);	//Random integers [0 : 25]
					dataset.push(newNumber);			 			 		//Add new number to array
					
					//Update scale domains
					xScale.domain(d3.range(dataset.length));	//Assigning X Scale with length of dataset 
					yScale.domain([0, d3.max(dataset)]);		//Dealing with Y Scale with the same method as well 
					//Select…
					var bars = svg.selectAll("rect")			
						.data(dataset);							//Reassigning dataset with bars
					
					//Enter…
					bars.enter()								//References the enter a subset
						.append("rect")							
						.attr("x", w)							
						.attr("y", function(d) {				
							return h - yScale(d);
						})
						.attr("width", xScale.bandwidth())		//Setting new width
						.attr("height", function(d) {			//Setting new height
							return yScale(d);
						})
						.attr("fill", function(d) {					//Sets the fill value
							return "rgb(0, 0, " + Math.round(d * 10) + ")";
						})
						.merge(bars)							
						.transition()							
						.duration(500)
						.attr("x", function(d, i) {					//Setting new x position
							return xScale(i);
						})
						.attr("y", function(d) {					//Set new y position, based on the updated yScale
							return h - yScale(d);
						})
						.attr("width", xScale.bandwidth())				//Set new width value, based on the updated xScale
						.attr("height", function(d) {					//Set new height value, based on the updated yScale
							return yScale(d);
						});
					//TODO: Update all labels
					//
					//Exercise: Modify this code to add a new label each time a new bar is added!
					//
					svg.selectAll("text")
					   .data(dataset)
					   .transition()
					   .duration(500)
					   .text(function(d) {
					   		return d;
					   })
					   .attr("x", function(d, i) {
							return xScale(i) + xScale.bandwidth() / 2;
					   })
					   .attr("y", function(d) {
							return h - yScale(d) + 14;
					   });
				});
			
		</script>
	</body>
</html>
